// File Generated by Codable tool
import Foundation
struct Readings : Codable {
	let o3_sub_index : TrioxygenSubIndex?
	let pm10_twenty_four_hourly : Pm10TwentyFourHourly?
	let pm10_sub_index : Pm10SubIndex?
	let co_sub_index : CarbonSubIndex?
	let pm25_twenty_four_hourly : Pm25TwentyFourHourly?
	let so2_sub_index : SulfurDioxideSubIndex?
	let co_eight_hour_max : CarbonEightHourMax?
	let no2_one_hour_max : NitrogenOxideOneHourMax?
	let so2_twenty_four_hourly : SulfurDioxideTwentyFourHourly?
	let pm25_sub_index : Pm25SubIndex?
	let psi_twenty_four_hourly : PsiTwentyFourHourly?
	let o3_eight_hour_max : O3EightHourMax?

	enum CodingKeys: String, CodingKey {

		case o3_sub_index = "o3_sub_index"
		case pm10_twenty_four_hourly = "pm10_twenty_four_hourly"
		case pm10_sub_index = "pm10_sub_index"
		case co_sub_index = "co_sub_index"
		case pm25_twenty_four_hourly = "pm25_twenty_four_hourly"
		case so2_sub_index = "so2_sub_index"
		case co_eight_hour_max = "co_eight_hour_max"
		case no2_one_hour_max = "no2_one_hour_max"
		case so2_twenty_four_hourly = "so2_twenty_four_hourly"
		case pm25_sub_index = "pm25_sub_index"
		case psi_twenty_four_hourly = "psi_twenty_four_hourly"
		case o3_eight_hour_max = "o3_eight_hour_max"
	}

	init(from decoder: Decoder) throws {
		let values = try decoder.container(keyedBy: CodingKeys.self)
		o3_sub_index = try values.decodeIfPresent(TrioxygenSubIndex.self, forKey: .o3_sub_index)
		pm10_twenty_four_hourly = try values.decodeIfPresent(Pm10TwentyFourHourly.self, forKey: .pm10_twenty_four_hourly)
		pm10_sub_index = try values.decodeIfPresent(Pm10SubIndex.self, forKey: .pm10_sub_index)
		co_sub_index = try values.decodeIfPresent(CarbonSubIndex.self, forKey: .co_sub_index)
		pm25_twenty_four_hourly = try values.decodeIfPresent(Pm25TwentyFourHourly.self, forKey: .pm25_twenty_four_hourly)
		so2_sub_index = try values.decodeIfPresent(SulfurDioxideSubIndex.self, forKey: .so2_sub_index)
		co_eight_hour_max = try values.decodeIfPresent(CarbonEightHourMax.self, forKey: .co_eight_hour_max)
		no2_one_hour_max = try values.decodeIfPresent(NitrogenOxideOneHourMax.self, forKey: .no2_one_hour_max)
		so2_twenty_four_hourly = try values.decodeIfPresent(SulfurDioxideTwentyFourHourly.self, forKey: .so2_twenty_four_hourly)
		pm25_sub_index = try values.decodeIfPresent(Pm25SubIndex.self, forKey: .pm25_sub_index)
		psi_twenty_four_hourly = try values.decodeIfPresent(PsiTwentyFourHourly.self, forKey: .psi_twenty_four_hourly)
		o3_eight_hour_max = try values.decodeIfPresent(O3EightHourMax.self, forKey: .o3_eight_hour_max)
	}

}
